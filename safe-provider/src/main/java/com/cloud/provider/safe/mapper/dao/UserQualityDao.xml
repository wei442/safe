<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.provider.safe.dao.dao.UserQualityDao">

	<!-- 查询用户资质列表 -->
    <select id="selectList" parameterType="com.cloud.provider.safe.param.UserQualityParam" resultType="com.cloud.provider.safe.vo.user.UserQualityVo">
        select 
        t1.id as userQualityId, t1.enterprise_id as enterpriseId, t1.user_id as userId, t1.user_name as userName, t1.quality_name as qualityName, t1.is_delete as isDelete, t1.remark as remark, t1.created as created, t1.updated as updated, t1.create_time as createTime, t1.update_time as updateTime, 
		t2.userQualityAttachmentId as userQualityAttachmentId, t2.name as name, t2.url as url, t2.count as count 
		from user_quality t1 left join 
		(select  
		t3.id as userQualityAttachmentId, t3.user_quality_id as userQualityId, t3.name as name, t3.url as url, 
		t4.count from user_quality_attachment t3, (select user_quality_id, count(user_quality_id) as count  from user_quality_attachment group by user_quality_id) t4 
		where t3.user_quality_id = t4.user_quality_id) t2 on t1.id = t2.userQualityId 
		where t1.is_delete = 0 
        <if test="enterpriseId != null and enterpriseId != ''">
            and t1.enterprise_id = #{enterpriseId,jdbcType=INTEGER}
        </if>
        <if test="orderByClause != null and orderByClause != ''">
  			order by ${orderByClause}
        </if>
    </select>
    
	<!-- 根据userId更新用户资质用户名称 -->
	<update id="updateUserNameByUserId" parameterType="com.cloud.provider.safe.param.UserQualityParam">
    	update user_quality
    	set user_name = #{userName,jdbcType=VARCHAR}
    	where user_id = #{userId,jdbcType=INTEGER}
  </update>
	  
</mapper>