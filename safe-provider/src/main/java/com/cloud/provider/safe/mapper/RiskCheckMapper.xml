<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.provider.safe.dao.RiskCheckMapper">
  <resultMap id="BaseResultMap" type="com.cloud.provider.safe.po.RiskCheck">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="risk_id" jdbcType="INTEGER" property="riskId" />
    <result column="effect" jdbcType="VARCHAR" property="effect" />
    <result column="check_user_id" jdbcType="INTEGER" property="checkUserId" />
    <result column="check_user_account" jdbcType="VARCHAR" property="checkUserAccount" />
    <result column="check_user_name" jdbcType="VARCHAR" property="checkUserName" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="created" jdbcType="VARCHAR" property="created" />
    <result column="updated" jdbcType="VARCHAR" property="updated" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, risk_id, effect, check_user_id, check_user_account, check_user_name, check_time, 
    created, updated, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.cloud.provider.safe.po.RiskCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from risk_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from risk_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from risk_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cloud.provider.safe.po.RiskCheckExample">
    delete from risk_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cloud.provider.safe.po.RiskCheck" useGeneratedKeys="true" keyProperty="id">
    insert into risk_check (id, risk_id, effect, 
      check_user_id, check_user_account, check_user_name, 
      check_time, created, updated, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{riskId,jdbcType=INTEGER}, #{effect,jdbcType=VARCHAR}, 
      #{checkUserId,jdbcType=INTEGER}, #{checkUserAccount,jdbcType=VARCHAR}, #{checkUserName,jdbcType=VARCHAR}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{created,jdbcType=VARCHAR}, #{updated,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cloud.provider.safe.po.RiskCheck" useGeneratedKeys="true" keyProperty="id">
    insert into risk_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="riskId != null">
        risk_id,
      </if>
      <if test="effect != null">
        effect,
      </if>
      <if test="checkUserId != null">
        check_user_id,
      </if>
      <if test="checkUserAccount != null">
        check_user_account,
      </if>
      <if test="checkUserName != null">
        check_user_name,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="riskId != null">
        #{riskId,jdbcType=INTEGER},
      </if>
      <if test="effect != null">
        #{effect,jdbcType=VARCHAR},
      </if>
      <if test="checkUserId != null">
        #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="checkUserAccount != null">
        #{checkUserAccount,jdbcType=VARCHAR},
      </if>
      <if test="checkUserName != null">
        #{checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cloud.provider.safe.po.RiskCheckExample" resultType="java.lang.Long">
    select count(*) from risk_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update risk_check
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.riskId != null">
        risk_id = #{record.riskId,jdbcType=INTEGER},
      </if>
      <if test="record.effect != null">
        effect = #{record.effect,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUserId != null">
        check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      </if>
      <if test="record.checkUserAccount != null">
        check_user_account = #{record.checkUserAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.checkUserName != null">
        check_user_name = #{record.checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=VARCHAR},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update risk_check
    set id = #{record.id,jdbcType=INTEGER},
      risk_id = #{record.riskId,jdbcType=INTEGER},
      effect = #{record.effect,jdbcType=VARCHAR},
      check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      check_user_account = #{record.checkUserAccount,jdbcType=VARCHAR},
      check_user_name = #{record.checkUserName,jdbcType=VARCHAR},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      created = #{record.created,jdbcType=VARCHAR},
      updated = #{record.updated,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cloud.provider.safe.po.RiskCheck">
    update risk_check
    <set>
      <if test="riskId != null">
        risk_id = #{riskId,jdbcType=INTEGER},
      </if>
      <if test="effect != null">
        effect = #{effect,jdbcType=VARCHAR},
      </if>
      <if test="checkUserId != null">
        check_user_id = #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="checkUserAccount != null">
        check_user_account = #{checkUserAccount,jdbcType=VARCHAR},
      </if>
      <if test="checkUserName != null">
        check_user_name = #{checkUserName,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=VARCHAR},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cloud.provider.safe.po.RiskCheck">
    update risk_check
    set risk_id = #{riskId,jdbcType=INTEGER},
      effect = #{effect,jdbcType=VARCHAR},
      check_user_id = #{checkUserId,jdbcType=INTEGER},
      check_user_account = #{checkUserAccount,jdbcType=VARCHAR},
      check_user_name = #{checkUserName,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>